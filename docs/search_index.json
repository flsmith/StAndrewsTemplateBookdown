[
["index.html", " An introduction to Statistical Modelling using GLMs Preface", " An introduction to Statistical Modelling using GLMs Lindesay Scott-Hayward 14 July 2020 Preface An introductory-workshop to the field of statistical modelling in R. The focus will be on how to fit statistical models in R, rather than on the rigorous underlying mathematics. The target audience is anyone who wants to learn how to fit linear models in R. The progression will be linear models, generalised linear models and linear mixed effects models. "],
["prerequisites.html", "Prerequisites", " Prerequisites Programming basics in R MTXXXX "],
["learning-outcomes.html", "Learning outcomes", " Learning outcomes Understand the key concepts and terminology used in statistical modelling Use R to fit linear, generalised linear and mixed effect models in R Recognise practical issues with fitting these models Checking model fit Perform model comparisons "],
["recommended-reading.html", "Recommended reading", " Recommended reading I highly recommend the following books: Statistics: An Introduction using R Linear models with R "],
["data-files.html", "Data files", " Data files All data files can be downloaded as a ZIP file from here. "],
["acknowledgements.html", "Acknowledgements", " Acknowledgements "],
["intro.html", "Chapter 1 Introduction", " Chapter 1 Introduction This is a sample book written in Markdown. You can use anything that Pandoc’s Markdown supports, e.g., a math equation \\(a^2 + b^2 = c^2\\). The bookdown package can be installed from CRAN or Github: install.packages(&quot;bookdown&quot;) # or the development version # devtools::install_github(&quot;rstudio/bookdown&quot;) Remember each Rmd file contains one and only one chapter, and a chapter is defined by the first-level heading #. To compile this example to PDF, you need XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.name/tinytex/. You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 1. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter 2. "],
["figures-and-tables.html", "1.1 Figures and Tables", " 1.1 Figures and Tables Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 1.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 1.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 1.1. You can also do a text reference for a figure which is useful if you want special characters; par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19, col=2) Figure 1.2: Define a text reference here with some math symbols like \\(\\theta\\). Here I am referencing 1.2. par(mar = c(4, 4, .1, .1)) plot(pressure, pch = 19, type = &#39;b&#39;) plot(cars, pch = 19) knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 1.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa Reference this table using Table 1.1 You can write citations, too. For example, we are using the bookdown package (Xie 2020) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). References "],
["equations.html", "1.2 Equations:", " 1.2 Equations: \\[\\begin{equation} f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k} \\tag{1.1} \\end{equation}\\] You may refer to it using (1.1), e.g., see Equation (2.1). Please make sure equations without labels are not numbered by either using the equation* environment or adding or to your equations. The same rules apply to other math environments, such as eqnarray, gather, align, and so on (e.g., you can use the align* environment). \\[\\begin{align} g(X_{n}) &amp; = g(\\theta)+g&#39;({\\tilde{\\theta}})(X_{n}-\\theta) \\notag \\\\ \\sqrt{n}[g(X_{n})-g(\\theta)] &amp; = g&#39;\\left({\\tilde{\\theta}}\\right) \\sqrt{n}[X_{n}-\\theta]\\tag{1.2} \\\\ \\end{align}\\] use split to have multiple lines with one equation reference \\[\\begin{equation} \\begin{split} \\mathrm{Var}(\\hat{\\beta}) &amp; =\\mathrm{Var}((X&#39;X)^{-1}X&#39;y)\\\\ &amp; =(X&#39;X)^{-1}X&#39;\\mathrm{Var}(y)((X&#39;X)^{-1}X&#39;)&#39;\\\\ &amp; =(X&#39;X)^{-1}X&#39;\\mathrm{Var}(y)X(X&#39;X)^{-1}\\\\ &amp; =(X&#39;X)^{-1}X&#39;\\sigma^{2}IX(X&#39;X)^{-1}\\\\ &amp; =(X&#39;X)^{-1}\\sigma^{2} \\end{split} \\tag{1.3} \\end{equation}\\] there are also ‘example’ and ‘exercise’ environments (labelled with exm and exr respectively) Example 1.1 (how to do an example) for this example, we show nothing Example 1.2 (how to do a second example) for this example, we show something These environments can be changed using the css file CSS class being the environment name, e.g., &lt;div class=\"lemma\"&gt;&lt;/div&gt; library(ggplot2) "],
["bellsandwhistles.html", "Chapter 2 Bells and Whistles", " Chapter 2 Bells and Whistles We describe some extra bells and whistles you can add to the book in this chapter. We showed some examples in the introduction, which we can reference back to here (Chapter 1). You can also reference specific sections by giving them a label {#sectionname} And you can add words to the index such as GLM "],
["shiny-app.html", "2.1 Shiny app", " 2.1 Shiny app 2.1.1 type 1 - calling from shinyapps.io This is a bad example of a shiny app to use as it is too large. Figure 2.1: An example of a shiny app. you can see a live version here You can use a shiny app embedded in the notes and refer to it the same way as a normal figure: Figure 2.1. 2.1.2 Type 2 - creating inline I did not manage to achieve this task of creating a shiny app inline. 2.1.3 Example one This might be an example of something 2.1.4 Example two Aside: using the model to predict outside of the range of the observed data is called extrapolating. Oftentimes, statistical models are developed in order to be used to extrapolate (e.g. climate modelling). This is however, dangerous, as we can only assess the assumptions of the model over the range of the observed data. When extrapolating we have to assume that these relationships hold beyond the range of the data, which may or may not be reasonable (hence why weather forecast over short-time periods are OK, but climate forecasts are much more uncertain). Hence, we should always view the model as an approximation of the data generating process. In this particualr case, the interpretation of the parameters is not sensible when \\(x = 0\\) (weight = 0 kg), but makes sense in the range that we are interested in exploring. If the case where \\(x = 0\\) is important, then we would have to change the model to ensure that the predictions made sense at those values of \\(x\\). "],
["tasks-with-feedback.html", "2.2 Tasks with Feedback", " 2.2 Tasks with Feedback These could be used as tasks with the answer or an opportunity to ask students a question with the answer in the solution. In the online version (the gitbook) there is a toggle button Show solution to see the answer. In the PDF version, there is a link to take the reader to the solutions, which are in the appendix. There is also a link to get back to the place in the text from the appendix. To define the “tasks” we use chunks for the task and for the solution: \"{task}\" and \"{solution}\". Task Produce a scatterplot of mpg against hp. What does the relationship look like? Show Solution Solution plot(hp ~ mpg, data = mtcars, pch=19, col=&#39;darkgrey&#39;) This is my solution Task This is another task with multi solution Show Solution Solution Base R tidyverse plot(hp ~ mpg, data = mtcars, pch=19, col=&#39;darkgrey&#39;) The plot suggests that a linear relationship might exist between the two variables. So we can proceed by fitting a linear model in R. ggplot(mtcars) + geom_point(aes(x = mpg, y = hp)) The plot suggests that a linear relationship might exist between the two variables. So we can proceed by fitting a linear model in R. "],
["final-words.html", "Chapter 3 Final Words", " Chapter 3 Final Words We have finished a nice book. If you want to split the book by sections, so each html page is a section you can use split_by=‘section’ in the YAML header. output: bookdown::gitbook: lib_dir: &quot;book_assets&quot; config: sharing: null split_by: section "],
["so-what-are-all-the-files.html", "3.1 So what are all the files?", " 3.1 So what are all the files? Main files index. This is the main Rmd file where you can set the tile and many of the build options _bookdown.yml. This file allows you to choose which chapters to include under which build (gitbook or pdf). You can also specify the book file name and outputs directory. Chapter files The first three files contain all the content for your book. The references and appendix files do not need to be changed. These ensure that you have a references section and the appendix with solutions to the tasks. Each chapter must begin with a single “#” level header (e.g. # Introduction at the top of the first file). 01-intro.Rmd 02-bellsandwhistles.Rmd 03-summary.Rmd 04-references.Rmd 05-ch_appendix.Rmd Bibliography files book.bib. This .bib file is where you place your references. packages.bib. This .bib file is created from the last part of code in the index.Rmd file. It compiles the citations of the specified packages. Style files style.css. This file describes the styling of the gitbook and includes they style of the “task” elements. toc.css. This file gives the styling for the table of contents panel to the left of the gitbook Git files?? DESCRIPTION README.md LICENCE .gitignore .gitattributes Other files _output.yml possibly duplicates whats in the index file?? _setup.Rmd. This file creates the “task” elements in markdown preamble.tex. This file loads all the packages necessary for the PDF generation. It is like the preamble of a latex document. Also defined here is how to treat the “task” elements for the PDF document. afterbody.tex toggle.html "],
["references.html", "References", " References "]
]
